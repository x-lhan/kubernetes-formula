{% from "kubernetes/map.jinja" import config with context %}


{% set node_ip = "--node-ip=" + grains.get("ip_interfaces").get(config.bind_iface)[0] %}

{% set daemon_args = "$DAEMON_ARGS" -%}
{% if grains['os_family'] == 'RedHat' -%}
  {% set daemon_args = "" -%}
{% endif -%}

{% if grains.api_servers is defined -%}
  {% set api_servers = "--api-servers=https://" + grains.api_servers -%}
{% elif grains.apiservers is defined -%} # TODO(remove after 0.16.0): Deprecated form
  {% set api_servers = "--api-servers=https://" + grains.apiservers -%}
{% else -%}
  {% set api_servers = "--api-servers=https://" + config.api_server.fqdn + ":" ~ config.api_server.port -%}
{% endif -%}

{% set master_kubelet_args = "" %}

{% set debugging_handlers = "--enable-debugging-handlers=true" -%}
{% set register_with_taints = "" %}
{% set node_labels = "" %}

{% if config.master is defined -%}

    {% set node_labels = "node-role.kubernetes.io=master" %}
    

    # Unless given a specific directive, disable registration for the kubelet
    # running on the master.
    {% if grains.kubelet_api_servers is defined or config.api_server.ip is defined and not config.api_server.register_schedulable -%}
      {% set register_with_taints = "node-role.kubernetes.io/master=:NoSchedule" -%}
    {% endif -%}
    
    {% if not config.api_server.debugging_handlers %}
    # Disable the debugging handlers (/run and /exec) to prevent arbitrary
    # code execution on the master.
    # TODO(roberthbailey): Relax this constraint once the master is self-hosted.
    {% set debugging_handlers = "--enable-debugging-handlers=false" -%}
    {% endif %}
{% endif -%}

{% if config.register_with_taints is defined %}
{% if register_with_taints|length > 0 %}
  {% set register_with_taints = register_with_taints + "," + config.register_with_taints|join(",") -%}
{% else %}
  {% set register_with_taints = config.register_with_taints|join(",") -%}
{% endif %}
{% endif %}

{% if register_with_taints|length > 0 %}
  {% set register_with_taints = "--register-with-taints=" + register_with_taints %}
{% endif %}

{% if config.node_labels is defined -%}
{% if node_labels|length > 0 %}
  {% set node_labels = node_labels + "," + config.node_labels|join(",") -%}
{% else %}
  {% set node_labels = config.node_labels|join(",") -%}
{% endif %}
{% endif -%}

{% if node_labels|length > 0 %}
  {% set node_labels = "--node-labels=" + node_labels %}
{% endif %}

{% set cloud_provider = "" -%}
{% if config.cloud is defined and config.cloud not in ['vagrant', 'photon-controller', 'azure-legacy'] -%}
  {% set cloud_provider = "--cloud-provider=" + config.cloud -%}
{% endif -%}

{% set cloud_config = "" -%}
{% if config.cloud is defined and config.cloud in [ 'openstack' ] and config.cloud_config is defined -%}
  {% set cloud_config = "--cloud-config=" + config.cloud_config -%}
{% endif -%}

{% set pod_manifest_path = "--pod-manifest-path=/etc/kubernetes/manifests" -%}

{% set manifest_url = "" -%}
{% set manifest_url_header = "" -%}
{% if config.get('enable_manifest_url', '').lower() == 'true' %}
  {% set manifest_url = "--manifest-url=" + config['manifest_url'] + " --manifest-url-header=" + config['manifest_url_header'] -%}
{% endif -%}

{% set hostname_override = config.get("hostname_override", "") %}


{% if hostname_override|length == 0 and config.get("minion_id_as_hostname", false) -%}
{% set hostname_override = grains['id']  %}
{% endif -%}

{% if hostname_override|length > 0 -%}
  {% set hostname_override = " --hostname-override=" + hostname_override -%}
{% endif -%}

{% set cluster_dns = "" %}
{% set cluster_domain = "" %}
{% if config.enable_cluster_dns is defined and config.enable_cluster_dns %}
  {% set cluster_dns = "--cluster-dns=" + config['dns_server'] %}
  {% set cluster_domain = "--cluster-domain=" + config['dns_domain'] %}
{% endif %}

{% set docker_root = "" -%}
{% if grains.docker_root is defined -%}
  {% set docker_root = " --docker-root=" + grains.docker_root -%}
{% endif -%}

{% set kubelet_root = "" -%}
{% if grains.kubelet_root is defined -%}
  {% set kubelet_root = " --root-dir=" + grains.kubelet_root -%}
{% endif -%}

{% set non_masquerade_cidr = "" -%}
{% if config.get('non_masquerade_cidr','') -%}
  {% set non_masquerade_cidr = "--non-masquerade-cidr=" + config.non_masquerade_cidr -%}
{% endif -%}

# Setup cgroups hierarchies.
{% set cgroup_root = "" -%}
{% set system_container = "" -%}
{% set kubelet_container = "" -%}
{% set runtime_container = "" -%}
{% if grains['os_family'] == 'Debian' -%}
  {% if config.get('is_systemd') %}
    {% set cgroup_root = "--cgroup-root=docker" -%}
  {% else %}
    {% set cgroup_root = "--cgroup-root=/" -%}
    {% set system_container = "--system-cgroups=/system" -%}
    {% set runtime_container = "--runtime-cgroups=/docker-daemon" -%}
    {% set kubelet_container= "--kubelet-cgroups=/kubelet" -%}
  {% endif %}
{% endif -%}
{% if grains['oscodename'] in ['vivid','wily'] -%}
  {% set cgroup_root = "--cgroup-root=docker" -%}
{% endif -%}

{% set pod_cidr = "" %}
{% if config.master is defined %}
  {% if grains.get('cbr-cidr') %}
    {% set pod_cidr = "--pod-cidr=" + grains['cbr-cidr'] %}
  {% elif config.get('network_provider', '').lower() == 'kubenet' %}
    # Kubelet standalone mode needs a PodCIDR since there is no controller-manager
    {% set pod_cidr = "--pod-cidr=10.76.0.0/16" %}
  {% endif -%}
{% endif %}

{% set cpu_cfs_quota = "" %}
{% if config['enable_cpu_cfs_quota'] is defined -%}
 {% set cpu_cfs_quota = "--cpu-cfs-quota=" + config['enable_cpu_cfs_quota'] -%}
{% endif -%}
{% from "kubernetes/map.jinja" import config with context %}

{% set feature_gates = "" -%}
{% if config['feature_gates'] is defined -%}
  {% set feature_gates = "--feature-gates=" + grains['feature_gates'] -%}
{% endif %}

{% set test_args = "" -%}
{% if config['kubelet_test_args'] is defined -%}
  {% set test_args=config['kubelet_test_args'] %}
{% endif -%}

{% set network_plugin = "" -%}
{% if config.get('network_provider', '').lower() == 'opencontrail' %}
  {% set network_plugin = "--network-plugin=opencontrail" %}
{% elif config.get('network_provider', '').lower() == 'cni' %}
  {% set network_plugin = "--network-plugin=cni --network-plugin-dir=/etc/cni/net.d/ --cni-bin-dir=/opt/cni/bin/  --cni-conf-dir=/etc/cni/net.d/" %}
{% elif config.get('network_provider', '').lower() == 'kubenet' %}
  {% set network_plugin = "--network-plugin=kubenet" -%}
{% endif -%}

# Don't pipe the --hairpin-mode flag by default. This allows the kubelet to pick
# an appropriate value.
{% set hairpin_mode = "" -%}
# The master cannot see Services because it doesn't run kube-proxy, so we don't
# need to make its container bridge promiscuous. We also don't want to set
# the hairpin-veth flag on the master because it increases the chances of
# running into the kernel bug described in #20096.
{% if config.master is defined -%}
  {% set hairpin_mode = "--hairpin-mode=none" -%}
{% elif config['hairpin_mode'] is defined and config['hairpin_mode'] in ['promiscuous-bridge', 'hairpin-veth', 'none'] -%}
  {% set hairpin_mode = "--hairpin-mode=" + config['hairpin_mode'] -%}
{% endif -%}

{% set kubelet_port = "" -%}
{% if config['kubelet_port'] is defined -%}
  {% set kubelet_port="--port=" + config['kubelet_port'] %}
{% endif -%}

{% set log_level = config['log_level'] -%}
{% if config['kubelet_test_log_level'] is defined -%}
  {% set log_level = config['kubelet_test_log_level'] -%}
{% endif -%}

{% set enable_custom_metrics = "" -%}
{% if config['enable_custom_metrics'] is defined -%}
  {% set enable_custom_metrics="--enable-custom-metrics=" + config['enable_custom_metrics'] %}
{% endif -%}

{% set eviction_hard = "" %}
{% if config['eviction_hard'] is defined -%}
  {% set eviction_hard="--eviction-hard=" + config['eviction_hard'] %}
{% endif -%}

{% set kubelet_auth = "--authorization-mode=Webhook"%}

{% if config.certs is defined and config.certs["ca.crt"] is defined %}
{% set kubelet_auth = kubelet_auth + " --anonymous-auth=False --client-ca-file=/var/lib/kubelet/ca.crt" %}
{% endif %}

# test_args has to be kept at the end, so they'll overwrite any prior configuration
DAEMON_ARGS="{{daemon_args}} {{node_ip}} {{api_servers}} {{debugging_handlers}} {{hostname_override}} {{cloud_provider}} {{cloud_config}} {{pod_manifest_path}} {{manifest_url}} --allow-privileged={{config['allow_privileged']}} {{register_with_taints}} {{log_level}} {{cluster_dns}} {{cluster_domain}} {{docker_root}} {{kubelet_root}}  {{non_masquerade_cidr}} {{cgroup_root}} {{system_container}} {{pod_cidr}} {{ master_kubelet_args }} {{cpu_cfs_quota}} {{network_plugin}} {{kubelet_port}} {{ hairpin_mode }} {{enable_custom_metrics}} {{runtime_container}} {{kubelet_container}} {{node_labels}} {{eviction_hard}} {{kubelet_auth}} {{feature_gates}} {{test_args}}"
